# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-06-25 10:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: generate-step-E4.sh:7 generate-step-E4.sh:38 generate-step-C1.sh:7
#: generate-step-E1.sh:29 generate-step-E1.sh:31 generate-step-E1.sh:32
#: generate-step-E6.sh:7 generate-step-E6.sh:8 generate-step-E6.sh:9
#: generate-step-G3.sh:8 generate-step-G3.sh:69 generate-step-E13.sh:7
#: generate-step-E13.sh:19 generate-step-E13.sh:73 generate-step-E13.sh:74
#: generate-step-E11.sh:10 generate-step-E11.sh:11 generate-step-E11.sh:39
#: generate-step-E11.sh:40 generate-step-E3.sh:7 generate-step-E3.sh:11
#: generate-step-E3.sh:30 generate-step-E3.sh:32 generate-step-E3.sh:33
#: generate-step-E3.sh:34 generate-step-E3.sh:35 generate-step-E3.sh:36
#: generate-step-E9.sh:6 generate-step-E9.sh:29 generate-step-G2.sh:8
#: generate-step-G2.sh:45 generate-step-D2.sh:44 generate-step-D2.sh:49
#: generate-step-D2.sh:51 generate-step-D2.sh:53 generate-step-D2.sh:62
#: generate-step-D2.sh:67 generate-step-D2.sh:69 generate-step-D2.sh:71
#: generate-step-D2.sh:94 generate-step-D2.sh:99 generate-step-D2.sh:101
#: generate-step-D2.sh:103 generate-step-A2.sh:24 generate-step-E5.sh:31
#: generate-step-F2.sh:7 generate-step-C3.sh:35 generate-step-E10.sh:7
#: generate-step-D1.sh:40 generate-step-D1.sh:41 generate-step-D1.sh:42
#: generate-step-D1.sh:80 generate-step-D1.sh:113 generate-step-D1.sh:115
#: generate-step-D1.sh:158 generate-step-D1.sh:160 generate-step-D1.sh:162
#: generate-step-B2.sh:7 generate-step-E2.sh:17 generate-step-B1.sh:30
#: generate-step-B1.sh:32 generate-step-B1.sh:47 generate-step-B1.sh:49
#: generate-step-B1.sh:62 generate-step-B1.sh:64 generate-step-B1.sh:66
#: i18n-lib.sh:31 upload-to-servers.sh:65 upload-to-servers.sh:68
#: upload-to-servers.sh:69 upload-to-servers.sh:70 upload-to-servers.sh:73
#: upload-to-servers.sh:74 upload-to-servers.sh:75 upload-to-servers.sh:79
#: upload-to-servers.sh:80 upload-to-servers.sh:81 upload-to-servers.sh:82
#: upload-to-servers.sh:83 upload-to-servers.sh:84 upload-to-servers.sh:85
#: upload-to-servers.sh:87 upload-to-servers.sh:91 upload-to-servers.sh:92
#: upload-to-servers.sh:93 upload-to-servers.sh:94 upload-to-servers.sh:103
#: upload-to-servers.sh:104 upload-to-servers.sh:105 upload-to-servers.sh:106
#: upload-to-servers.sh:107 upload-to-servers.sh:108 upload-to-servers.sh:109
#: upload-to-servers.sh:110 upload-to-servers.sh:111 upload-to-servers.sh:112
#: upload-to-servers.sh:113 upload-to-servers.sh:114 upload-to-servers.sh:115
msgid "etape"
msgstr ""

#: generate-step-E4.sh:9
msgid ""
"Bien, vous avez reussi a decoder le message.\n"
"\n"
"La solution la plus élégante était d'utiliser une redirection, comme\n"
"ceci :\n"
"\n"
"  ./decoder.py < etape-E4.txt\n"
"\n"
"Si on veut sauvegarder le résultat, on peut aussi écrire\n"
"\n"
"  ./decoder.py < etape-E4.txt > etape-E4-decodee.txt\n"
"\n"
"puis regarder le contenu du fichier etape-E4-decodee.txt.\n"
"\n"
"(Envelez les '.py' dans les commandes ci-dessus si vous avez utilisé\n"
"un langage autre que Python bien sûr).\n"
"\n"
"Pour l'etape suivante, le message se trouve dans etape-E5.txt, mais\n"
"il est doublement code : pour le decoder, il va falloir passer dans\n"
"deux filtres differents.\n"
"\n"
"Le deuxieme filtre s'appelle \"decoder_bis\", il va falloir le\n"
"compiler comme le premier.\n"
"\n"
"Vous devriez, en une (seule) ligne de commande, executer quelque chose\n"
"comme cela :\n"
"\n"
"fichier ----> decoder.py -----> decoder_bis.py ----> affichage\n"
"\n"
"(en utilisant la notion de \"pipe\").\n"
msgstr ""

#: generate-step-D3.sh:10 generate-step-D3.sh:107 generate-step-E11.sh:35
#: generate-step-A5.sh:35 generate-step-A5.sh:100 upload-to-servers.sh:66
#: upload-to-servers.sh:76 upload-to-servers.sh:88 upload-to-servers.sh:89
#: generate-all.sh:26 generate-all.sh:27 generate-all.sh:28 generate-all.sh:31
msgid "fr"
msgstr ""

#: generate-step-D3.sh:14
msgid "Etape D3: édition de texte"
msgstr ""

#: generate-step-D3.sh:15
msgid ""
"Ci-dessous un programme %s à compiler (autres versions : %s),\n"
"avec plusieurs problèmes :\n"
"<ul>\n"
"<li>L'ensemble du programme est commenté, il faudra donc supprimer les <code>"
"%s</code> en début de ligne</li>\n"
"<li>L'auteur a utilisé des crochets [] au lieu des parenthèses (). Il n'y a "
"aucun [] dans le code valide.</li>\n"
"<li>Il reste quelques erreurs de syntaxes</li>\n"
"</ul>\n"
"La mauvaise nouvelle, c'est que ce programme n'est valide que pendant\n"
"%d secondes, il va donc falloir être rapide pour faire toutes ces\n"
"corrections. Préparez-vous, et générez un nouveau programme pour\n"
"relancer le compte à rebours.\n"
"<br />\n"
"Si ce n'est pas déjà fait, lisez jusqu'au bout la page\n"
"%s, elle contient des conseils pour aller plus vite.\n"
msgstr ""

#: generate-step-D3.sh:30
msgid "La réponse est :"
msgstr ""

#: generate-step-D3.sh:31
msgid "Réponse incorrecte : \"%s\" (en %01.1f secondes)."
msgstr ""

#: generate-step-D3.sh:32
msgid ""
"Vous avez pris %01.1f secondes, et il fallait terminer en moins de %d, "
"désolé. Je génère un nouveau programme."
msgstr ""

#: generate-step-D3.sh:33
msgid "Programme compilé correctement en %01.1f secondes."
msgstr ""

#: generate-step-D3.sh:34
#, sh-format
msgid ""
"L'étape suivante se trouve dans le fichier\n"
"\n"
"$maindir_tilde/oaue/etape-E1\n"
"\n"
"La personne qui a créé ce fichier l'a nommé étrangement :\n"
"il n'a pas mis d'extension (i.e. le nom de fichier ne se \n"
"termine pas par .quelquechose). Pour savoir de quel type\n"
"de fichier il s'agit, utilisez la commande 'file', et\n"
"utilisez ensuite l'outil adapté pour l'ouvrir.\n"
"\n"
"Selon votre configuration, vous aurez peut-être besoin de renommer (ou\n"
"copier) le fichier pour lui donner l'extension habituelle pour ce type\n"
"de fichier.\n"
msgstr ""

#: generate-step-D3.sh:48
msgid "Ceci est un vrai commentaire inutile."
msgstr ""

#: generate-step-D3.sh:49
msgid "Entrez la sortie du programme compilé ici :"
msgstr ""

#: generate-step-D3.sh:50
msgid "Cliquez ici pour générer un nouveau programme :"
msgstr ""

#: generate-step-D3.sh:51
msgid "Il reste %d secondes."
msgstr ""

#: generate-step-D3.sh:52
msgid ""
"Pour information, votre réponse \"%s\" était correcte. Soyez plus rapide la "
"prochaine fois."
msgstr ""

#: generate-step-D3.sh:53
msgid ""
"Pour information, votre réponse \"%s\" était incorrecte (attendu : \"%s\")."
msgstr ""

#: generate-step-D3.sh:54
msgid "Génération d'un nouveau programme."
msgstr ""

#: generate-step-D3.sh:55
msgid "secondes"
msgstr ""

#: generate-step-D3.sh:56
msgid "Meilleurs scores récents :"
msgstr ""

#: generate-step-D3.sh:57
msgid "Entrez un pseudo ici qui apparaitra dans le highscore :"
msgstr ""

#: generate-step-D3.sh:58
msgid "Pour réessayer, cliquez ici :"
msgstr ""

#: generate-step-D3.sh:59
msgid ""
"<a href=\"http://ensiwiki.ensimag.fr/index.php/Premiers_pas_avec_Emacs_et_Ada"
"\">Premiers pas avec Emacs et Ada</a>\n"
"sur EnsiWiki"
msgstr ""

#: generate-step-D3.sh:61
msgid ""
"<a href=\"http://ensiwiki.ensimag.fr/index.php/"
"Premiers_pas_avec_Emacs_et_Python\">Premiers pas avec Emacs et Python</a>\n"
"sur EnsiWiki"
msgstr ""

#: generate-step-C1.sh:19
#, sh-format
msgid ""
"Bien, vous avez réussi à compiler le fichier.\n"
"\n"
"Il faut reconnaitre que le source n'était pas très lisible (mais\n"
"rassurez-vous, il n'a pas été écrit à la main ...).\n"
"\n"
"L'etape suivante se trouve dans le fichier jeu-de-piste/etape-C2.odt\n"
"sur le compte de l'utilisateur ${main_user}. Il vous reste à trouver avec\n"
"quelle application ouvrir ce fichier ..."
msgstr ""

#: generate-step-E1.sh:16
#, sh-format
msgid ""
"Et oui, c'est bien un fichier PDF (si vous lisez ceci, je suppose\n"
"que vous l'avez ouvert avec un outil comme kpdf, evince ou acroread).\n"
"\n"
"Pour l'étape suivante, elle se trouve dans le répertoire suivant :\n"
"\n"
"\\verb|${maindir_tilde}/kmcv/|\n"
"\n"
"Il y a un fichier par langue (français, anglais), mais ces fichiers\n"
"sont cachés, donc, vous ne les verrez pas forcément immédiatement ...\n"
"\n"
msgstr ""

#: generate-step-E6.sh:43
#, sh-format
msgid ""
"Bravo,\n"
"\n"
"Enfin, en esperant que vous n'ayez pas examine tous les fichiers un\n"
"par un, mais que vous ayez utilise une commande comme\n"
"\n"
"  find . -name '*.txt' ...\n"
"\n"
"L'etape suivante se trouve aussi dans\n"
"$maindir/kmcvoaue/${step}-E6/.\n"
"\n"
"C'est le plus gros fichier qui se trouve dans ce repertoire ou un de\n"
"ses sous-repertoires.\n"
"\n"
"Les commandes find et sort peuvent vous aider. Regardez en\n"
"particulier l'option -exec de find ou bien documentez-vous sur la\n"
"commande xargs.\n"
"\n"
"Cette etape est tres difficile, n'hesitez pas a demander de l'aide a\n"
"votre enseignant ou a vos collegues. Certains exercices de la fin du\n"
"chapitre 7 du polycopié ont été fait pour vous guider sur cette étape,\n"
"si vous ne les avez pas encore fait, il est temps d'avancer sur la\n"
"lecture du polycopié.\n"
msgstr ""

#: generate-step-E6.sh:68
#, sh-format
msgid ""
"Bien vu !\n"
"\n"
"Vous avez fait comment ? Moi, je m'en suis sorti avec\n"
"\n"
"  find etape-E6/ -type f | xargs ls -l | sort -n -k 5 | tail -n 1\n"
"\n"
"mais chacun ses gouts. On peut aussi s'en sortir a coups de\n"
"\n"
"  ls -lR etape-E6/ | sort -n -k 5\n"
"\n"
"ou (sans doute plus propre) :\n"
"\n"
"  find etape-E6/ -type f -exec wc -c {} \\; | sort -n\n"
"\n"
"Vous pouvez aller chercher l'etape E8, c'est le seul fichier (a part\n"
"celui-ci) du repertoire\n"
"$maindir/kmcvoaue/${step}-E6/ qui contienne la\n"
"chaine :\n"
"\n"
"  Bravo, vous avez trouve l'etape E8.\n"
"\n"
"Bon, on avait dit qu'il fallait que ce soit le plus gros fichier du\n"
"repertoire, donc il faut meubler un peu pour que le fichier soit\n"
"effectivement gros. Donc, pour prendre un peu de place, voici un Tux\n"
"en ascii-art :\n"
"\n"
"                 .88888888:.\n"
"                88888888.88888.\n"
"              .8888888888888888.\n"
"              888888888888888888\n"
"              88' _`88'_  `88888\n"
"              88 88 88 88  88888\n"
"              88_88_::_88_:88888\n"
"              88:::,::,:::::8888\n"
"              88`:::::::::'`8888\n"
"             .88  `::::'    8:88.\n"
"            8888            `8:888.\n"
"          .8888'             `888888.\n"
"         .8888:..  .::.  ...:'8888888:.\n"
"        .8888.'     :'     `'::`88:88888\n"
"       .8888        '         `.888:8888.\n"
"      888:8         .           888:88888\n"
"    .888:88        .:           888:88888:\n"
"    8888888.       ::           88:888888\n"
"    `.::.888.      ::          .88888888\n"
"   .::::::.888.    ::         :::`8888'.:.\n"
"  ::::::::::.888   '         .::::::::::::\n"
"  ::::::::::::.8    '      .:8::::::::::::.\n"
" .::::::::::::::.        .:888:::::::::::::\n"
" :::::::::::::::88:.__..:88888:::::::::::'\n"
"  `'.:::::::::::88888888888.88:::::::::'\n"
"        `':::_:' -- '' -'-' `':_::::'`\n"
"\n"
msgstr ""

#: generate-step-E6.sh:123
#, sh-format
msgid ""
"Bravo, vous avez trouve l'etape E8.\n"
"\n"
"Si vous avez utilisé une commande comme\n"
"\n"
"  find . -type f | xargs grep Bravo\n"
"\n"
"sachez qu'il y a plus simple : l'option -r de grep a ete faite\n"
"exactement pour cela :\n"
"\n"
"  grep -r Bravo .\n"
"\n"
"(le . a la fin veut dire \"dans le repertoire courant\")\n"
"\n"
"Une subtilité, si on veut chercher correctement la chaine complete :\n"
"on ne peut pas écrire simplement\n"
"\n"
"  grep -r Bravo, vous avez trouve l'etape E8 .\n"
"\n"
"qui tenterait d'appeler grep avec les arguments 'Bravo,', 'vous' ...\n"
"On peut dire a notre shell de considerer la chaine comme un seul\n"
"argument en ajoutant des guillemets :\n"
"\n"
"  grep -r \"Bravo, vous avez trouve l'etape E8\" .\n"
"\n"
"Pour l'étape suivante, elle se trouve à l'adresse\n"
"\n"
"$web_url/yntsf/etape-E9.php\n"
"\n"
msgstr ""

#: generate-step-G3.sh:16 generate-step-G2.sh:16
msgid ""
"Il semble que vous ne soyez pas connectes à la machine via SSH.\n"
"\n"
"Je refuse de m'exécuter dans ces conditions, désolé.\n"
"Merci de vous connecter à cette machine via SSH, et je\n"
"vous donnerai la solution.\n"
"\n"
"Si cette étape se trouve sur la même machine que votre machine de\n"
"travail habituel, vous pouvez utiliser un PC individuel ou votre\n"
"machine personnelle pour réaliser cette étape.\n"
msgstr ""

#: generate-step-G3.sh:26
msgid ""
"Vous n'avez pas activé l'affichage graphique avec SSH.\n"
"\n"
"Réessayez en utilisant l'option -X de SSH pour activer le 'X11 forwarding'."
msgstr ""

#: generate-step-G3.sh:35
msgid ""
"Cette étape termine la partie principale du jeu de piste.\n"
"\n"
"Les étapes qui suivent sont des étapes en plus, a priori plus\n"
"difficiles. Si vous vous arretez-là et que vous avez lu le polycopié\n"
"en entier, vous devriez avoir appris l'essentiel.\n"
"\n"
"Pour confirmer que vous êtes arrivés jusqu'ici, nous vous demandons\n"
"d'ajouter un commentaire sur la page de discussion de la page « Jeu de\n"
"piste » du Wiki, pour permettre à l'équipe enseignante d'avoir une\n"
"idée du nombre d'étudiants qui sont arrivés au bout, et surtout pour\n"
"savoir si ça vous a plu !\n"
"\n"
"La fenêtre dans laquelle s'affiche ce message est en fait le programme\n"
"'less' qui tourne dans un terminal. Vous pouvez quitter en appuyant sur\n"
"'q'.\n"
"\n"
"Si vous souhaitez faire la deuxième partie du jeu de piste,\n"
"rendez-vous sur la page\n"
"http://ensiwiki.ensimag.fr/index.php/TP_Unix_-_Jeu_de_piste\n"
"et lisez l'énoncé de l'étape H1.\n"
"\n"
"Sinon, vous pourrez bien sûr y revenir plus tard, par exemple pendant\n"
"le cours d'Unix avancé si vous êtes en 1A Ensimag.\n"
msgstr ""

#: generate-step-E13.sh:9
msgid ""
"Voila, vous terminez ainsi la partie E du jeu de piste.\n"
"\n"
"L'étape suivante se trouve dans le répertoire F1 de ce répertoire\n"
"(dans la même archive etape-E13.tar.gz).\n"
"\n"
"C'est le seul fichier dont le nom commence par x, et terminant par\n"
"autre chose qu'un z.\n"
"\n"
"La solution est très simple si on sait ce qu'est un wildcard (le\n"
"polycopié vous l'apprendra si vous ne le savez pas déjà).\n"
msgstr ""

#: generate-step-E13.sh:32
msgid ""
"Oui, c'est bien celui là.\n"
"\n"
"Beaucoup d'entre vous tentent des solutions bien compliquées comme\n"
"\n"
"  ls | grep '^x.*[^z]$'\n"
"\n"
"C'est une assez mauvaise idée pour plusieurs raisons : d'une part, la\n"
"sortie de 'ls' n'est pas faite pour être lue par une commande ('grep'\n"
"ici) mais par un être humain. Si votre 'ls' est configuré pour\n"
"afficher des caractères en plus (e.g. @ pour les liens, / pour les\n"
"répertoires, ...) alors ces caractères sont lus par 'grep' par exemple.\n"
"D'autre part, on utilise deux processus ('ls' et 'grep') alors qu'un\n"
"aurait suffit. Et puis, l'argument de 'grep' est une expression\n"
"régulière (vous apprendrez bientôt ce que c'est en théorie des\n"
"langages), c'est très puissant mais un peu lourd à utiliser (par\n"
"exemple, * ne veut pas dire « n'importe quelle chaîne », mais\n"
"« caractère précédent répété un nombre quelconque de fois »).\n"
"\n"
"Une solution plus simple :\n"
"\n"
"  ls x*[^z]\n"
"\n"
"Cette fois-ci, c'est le shell et non grep qui interprête ce x*[^z]\n"
"(qui est un wildcard et non une expression régulière). Et comme c'est\n"
"le shell et non la commande ls qui fait le travail, on peut même\n"
"écrire directement :\n"
"\n"
"  less x*[^z]\n"
"\n"
"Pour afficher le fichier avec la commande 'less' en une ligne.\n"
"\n"
"Pour l'étape suivante, exécutez (sur votre machine de travail) le script\n"
"\n"
"  $maindir_tilde/979b5c3/etape-F2.sh\n"
"\n"
"et laissez-vous guider par les instructions. Le chapitre 8 du\n"
"polycopié devrait vous aider.\n"
msgstr ""

#: generate-step-E11.sh:13
#, sh-format
msgid ""
"Bien.\n"
"\n"
"En fait,\n"
"ca n'etait pas si dur,\n"
"il suffisait\n"
"de faire\n"
"\n"
"  diff etape-E11.txt etape-E11-bis.txt | grep '^<'\n"
"\n"
"(pour grep, ^ veut dire 'debut de ligne')\n"
"\n"
"(et alors, quelqu'un a trouvé la commande avec seulement grep ?)\n"
"\n"
"Pour l'étape suivante, on va s'entrainer au futur examen de TP. Une version "
"de démonstration est disponible ici :\n"
"\n"
"$demo_url\n"
"\n"
"Répondez correctement à toutes les questions, puis suivez les\n"
"instructions en bas de page.\n"
"\n"
"La réponse à la dernière question sera : b3147554\n"
"\n"
msgstr ""

#: generate-step-E3.sh:12
msgid ""
"Jouons maintenant un peu avec les redirections.\n"
"\n"
"Vous trouverez dans cette archive un fichier decoder.py. Rendez-le\n"
"exécutable avec 'chmod +x' (si vous préférez le C, le programme\n"
"decoder.c fait la même chose, à compiler avec gcc, et si vous préférez\n"
"l'Ada, decoder.adb fait également la même chose, à compiler avec\n"
"gnatmake).\n"
"\n"
"Ce fichier lit sur son entree une suite de caractères \"codee\", et\n"
"affiche sur sa sortie une version \"decodee\" de cette suite de\n"
"caractères.\n"
"\n"
"Si vous l'executez tel quel, le programme va lire au clavier et\n"
"afficher chaque ligne decodee jusqu'a ce que vous terminiez avec\n"
"control-d.\n"
"\n"
"Un message code se trouve dans le fichier etape-E4.txt, decodez-le\n"
"en utilisant decoder.\n"
msgstr ""

#: generate-step-E9.sh:23
msgid "Etape"
msgstr ""

#: generate-step-E9.sh:30
#, sh-format
msgid "Quel est votre login ${school}? :"
msgstr ""

#: generate-step-G2.sh:31
#, sh-format
msgid ""
"Bien.\n"
"\n"
"L'étape suivante est très similaire, c'est aussi un exécutable à\n"
"lancer sur une machine distante. L'exécutable se trouve sur le\n"
"serveur ${auxiliarymachine}, à l'emplacement :\n"
"\n"
"  ~${auxiliary_user}/jeu-de-piste/FqM6IhHP/etape-G3.sh\n"
"\n"
"La commande en question utilise un affichage graphique, donc vous\n"
"risquez d'avoir besoin de l'option -X de la commande ssh.\n"
msgstr ""

#: generate-step-D2.sh:12
msgid ""
"Fichier source pour l'etape D2.\n"
"Le programme est coupé en 3 morceaux.\n"
"Assemblez-les puis compilez le programme.\n"
msgstr ""

#: generate-step-D2.sh:19
#, sh-format
msgid ""
"Visiblement, le copier-coller a marché !\n"
"\n"
"La suite se trouve ici :\n"
"\n"
"$web_url/4ba3/text-editor-fr.php\n"
"\n"
"Ouvrez cette page dans votre navigateur et laissez-vous guider.\n"
msgstr ""

#: generate-step-D2.sh:34
msgid "procedure Etape_D2 is"
msgstr ""

#: generate-step-D2.sh:41
msgid "end Etape_D2;"
msgstr ""

#: generate-step-D2.sh:46
msgid "etape_d2.adb genere"
msgstr ""

#: generate-step-D2.sh:64
msgid "etape_d2.c genere"
msgstr ""

#: generate-step-D2.sh:96
msgid "etape_d2.py genere"
msgstr ""

#: generate-step-A5.sh:24 generate-step-A5.sh:27 upload-to-servers.sh:61
#: upload-to-servers.sh:62
msgid "jeu-de-piste.sh"
msgstr ""

#: generate-step-A5.sh:37
msgid ""
"Un message a ete envoye a %s.\n"
"Consultez cette boite mail pour avoir les instructions pour l'etape suivante."
msgstr ""

#: generate-step-A5.sh:39
msgid "Enonce etape B1"
msgstr ""

#: generate-step-A5.sh:40
#, sh-format
msgid ""
"Bonjour,\n"
"\n"
"Cet email vous est envoyé par le script jeu-de-piste.sh. Il fait\n"
"partie du TP 'Jeu de piste'.\n"
"\n"
"L'étape suivante est une exécution de programme Python (si vous\n"
"préférez le C ou l'Ada, voir ci-dessous). Le programme se trouve dans\n"
"le fichier etape_b2.py dans le répertoire jeu-de-piste sur le compte\n"
"de l'utilisateur ${main_user}.\n"
"\n"
"Vous n'avez pas le droit d'utiliser la commande 'ls' dans ce\n"
"répertoire (vous pouvez essayer, mais ça ne marchera pas), mais vous\n"
"pouvez tout de même récupérer le fichier en question (vous verrez plus\n"
"tard comment utiliser la commande chmod pour obtenir ce genre de\n"
"permissions).\n"
"\n"
"Récupérez ce fichier chez vous, par exemple avec\n"
"\n"
"  cp le-fichier-en-question ~\n"
"\n"
"(~ veut dire 'mon répertoire personnel')\n"
"\n"
"Puis revenez dans votre répertoire personnel et exécutez ce fichier\n"
"avec la commande\n"
"\n"
"  python3 etape_b1.py\n"
"\n"
"Le programme vous donnera les indications pour aller a l'étape\n"
"suivante.\n"
"\n"
"Si vous préférez le langage Ada, un programme Ada se trouve dans le\n"
"fichier etape_b1.adb dans le répertoire jeu-de-piste sur le compte de\n"
"l'utilisateur ${main_user}. Copiez le fichier sur votre compte, puis\n"
"compilez-le avec la commande :\n"
"\n"
"  gnatmake etape_b1\n"
"\n"
"puis exécutez-le avec\n"
"\n"
"  ./etape_b1\n"
"\n"
"Si vous préférez le langage C, une version C se trouve dans le même\n"
"répertoire, dans le fichier etape_b1.c (à compiler avec la commande\n"
"gcc).\n"
"\n"
msgstr ""

#: generate-step-A2.sh:26
msgid ""
"Voila, vous avez résolu l'etape A1.\n"
"\n"
"Pour l'étape suivante (A2), la voici, mais elle est encodée en rot13.\n"
"\n"
"Au point où vous en êtes, vous devriez être capables de trouver (en\n"
"quelques secondes) ce qu'est rot13, et un moyen de le décoder\n"
"facilement.\n"
"\n"
msgstr ""

#: generate-step-A2.sh:36
msgid ""
"Voila, le rot13 est decode.\n"
"\n"
"Si vous etes malins, vous avez sans doute remarque que le web regorge\n"
"de codeur/decodeur rot13 en ligne, donc, un bon moteur de recherche a\n"
"la main, on trouve rapidement son bonheur (et c'etait bien le but de\n"
"l'exercice !). Les Emacsiens auront prefere M-x rot13-region RET, mais\n"
"c'est une autre histoire.\n"
"\n"
"Nous quittons maintenant EnsiWiki pour Chamilo. Chamilo est accessible\n"
"depuis l'accueil de l'intranet Ensimag (https://intranet.ensimag.fr/).\n"
"Allez-y, et trouvez le cours Ensimag « Ensimag 3MMUNIX Unix :\n"
"introduction et programmation shell ». Ouvrez l'outil « Documents » :\n"
"vous trouverez un document qui est l'étape A3 du jeu de piste.\n"
"\n"
msgstr ""

#: generate-step-E5.sh:7
#, sh-format
msgid ""
"Bravo !\n"
"\n"
"La solution la plus simple était :\n"
"\n"
"  ./decoder.py < etape-E5.txt | ./decoder_bis.py\n"
"\n"
"Attention il faut bien distinguer les redirections vers/depuis les\n"
"fichiers (< et >) et les pipes (|). Si nous avions écrit par exemple\n"
"\n"
"  ./decoder.py < etape-E5.txt > ./decoder_bis.py\n"
"\n"
"nous aurions envoyé la sortie de decoder.py vers le *fichier*\n"
"decoder_bis.py au lieu d'exécuter la commande decoder_bis.py. Ça\n"
"n'aurait bien sûr pas marché, et en plus nous aurions écrasé le\n"
"fichier decoder_bis.py !\n"
"\n"
"L'etape suivante est accessible depuis votre machine de travail, dans\n"
"le repertoire\n"
"\n"
"  ${maindir_tilde}/kmcvoaue/${step}-E6/\n"
"\n"
"Les instructions sont dans le seul fichier de ce repertoire (et de ses\n"
"sous-répertoires) dont le nom se termine par .txt.\n"
msgstr ""

#: generate-step-F2.sh:29
msgid ""
"Ce script refuse de s'exécuter dans un environnement configuré\n"
"en français. Configurez votre environnement en anglais (voir les "
"documentations\n"
"fournies par les enseignants) et recommancez.\n"
"\n"
"Oui, je suis un peu dur, avec vous, mais c'est une bonne habitude pour\n"
"un informaticien de travailler avec des logiciels en anglais et de\n"
"s'habituer à lire les documentations en anglais : autant s'y mettre\n"
"tout de suite !\n"
msgstr ""

#: generate-step-F2.sh:41
msgid "Parfait, votre environnement parle anglais, continuons ...\n"
msgstr ""

#: generate-step-F2.sh:45
msgid ""
"Votre environnement est configuré dans une langue que je ne connais\n"
"pas, ou bien il y a un bug dans le jeu de piste. Voici les informations sur\n"
"la configuration (commande 'locale') :\n"
msgstr ""

#: generate-step-F2.sh:50
msgid "Appuyez sur Entrée pour continuer"
msgstr ""

#: generate-step-F2.sh:62
msgid "Non ..."
msgstr ""

#: generate-step-F2.sh:63
msgid "Rejoue !"
msgstr ""

#: generate-step-F2.sh:72
#, sh-format
msgid ""
"Bravo ! fin de l'étape...\n"
"\n"
"L'étape suivante se trouve sur le serveur ${auxiliary_machine2}. Elle est\n"
"dans le fichier\n"
"\n"
"  ${auxiliary_path2}/etape-G1.txt\n"
"\n"
"Récupérez-la via sftp (cf.\n"
"http://ensiwiki.ensimag.fr/index.php/Travailler_a_distance pour 1001\n"
"façons de faire cela) pour continuer.\n"
msgstr ""

#: generate-step-F2.sh:87
msgid "cette action envoie un caractere de fin de fichier au processus"
msgstr ""

#: generate-step-F2.sh:91
msgid "cette action aurait pu tuer le processus"
msgstr ""

#: generate-step-F2.sh:100
msgid ""
"Ok, je me suspends. Relance-moi en avant-plan pour continuer.\n"
"A tout de suite ..."
msgstr ""

#: generate-step-F2.sh:108
msgid ""
"Me revoila. J'attends maintenant un caractere de fin de fichier.\n"
"Si la commande avait été lancée avec une entree redirigee\n"
"(comme './etape-F2.sh < un-fichier' ou bien 'commande | ./etape-F2.sh'),\n"
"le caractere de fin de fichier aurait ete recu en arrivant\n"
"a la fin du fichier ou de la commande d'entree. Ici, l'entree de\n"
"etape-F2.sh est le clavier. On peut simuler une fin de fichier avec\n"
"Control-d.\n"
msgstr ""

#: generate-step-F2.sh:119
msgid "Suspends moi..."
msgstr ""

#: generate-step-C3.sh:8
#, sh-format
msgid ""
"Voilà, cette image est une image au format PNG.\n"
"\n"
"On peut l'éditer avec The Gimp (commande gimp), la visualiser avec Eye of "
"Gnome\n"
"(commande eog), par exemple.\n"
"\n"
"Pour les curieux, vous remarquerez que l'image ressemble à ce que produit\n"
"l'utilitaire a2ps. Ce n'est pas une coincidence, il a été généré avec a2ps "
"et\n"
"convert pour passer du format ps au format PNG.\n"
"\n"
"Nous pouvons maintenant passer à la partie sur les éditeurs de textes.\n"
"\n"
"Vous trouverez l'étape suivante dans le fichier\n"
"\n"
"$web_url/abc/etape_d1.adb\n"
"\n"
"Si vous préférez le C à l'Ada, vous pouvez aussi utiliser\n"
"\n"
"$web_url/abc/etape_d1.c\n"
"\n"
"Malheureusement, cette fois-ci, le fichier n'est pas directement compilable. "
"Il\n"
"faudra corriger quelques erreurs de syntaxes.\n"
"\n"
"Il est conseillé d'utiliser Emacs (ou un autre bon éditeur de texte) pour "
"cette\n"
"partie : avec la commande Goto Line décrite sur le Wiki, vous pourrez "
"trouver\n"
"l'endroit de chaque erreur de syntaxe en un clin d'oeil.\n"
"\n"
"Entrainez-vous à aller vite, vous en aurez bientôt besoin ...\n"
msgstr ""

#: generate-step-C3.sh:37
msgid "etape-C3.png générée"
msgstr ""

#: generate-step-E10.sh:9
msgid ""
"Voila donc l'etape E10.\n"
"\n"
"Bon, les instructions sont bien dans ce fichier, mais elles sont\n"
"melangees avec des tas d'autres lignes qui n'ont rien a voir.\n"
"\n"
"Ne gardez que les lignes qui contiennent la chaine ETAPE-E10 pour\n"
"avoir les bonnes instructions.\n"
msgstr ""

#: generate-step-E10.sh:18
msgid ""
"Pour l'etape suivante\n"
"les instructions\n"
"se trouvent\n"
"dans le fichier\n"
"etape-E11.txt\n"
"dans le\n"
"meme repertoire\n"
"que le fichier\n"
"de l'etape\n"
"E10.\n"
"\n"
"Pour l'obtenir\n"
"il suffit donc\n"
"dans votre navigateur\n"
"d'editer l'URL de\n"
"l'etape E10 et de\n"
"remplacer etape-E10.txt\n"
"par etape-E11.txt\n"
"\n"
"(enfin, pour telecharger des fichiers\n"
"rapidement, il y a aussi wget:\n"
"\n"
"wget http://blabla.com/fichier\n"
"\n"
"va telecharger le fichier dans le\n"
"répertoire courant)\n"
"\n"
"par contre, cette etape est encore\n"
"polluee par des lignes inutiles.\n"
"En fait, les lignes pertinentes sont celles\n"
"qui sont dans etape-E11.txt\n"
"mais pas dans etape-E11-bis.txt\n"
"(etape-E11-bis.txt se trouve dans\n"
"le meme repertoire que les deux\n"
"autres fichiers)\n"
"\n"
"La commande diff devrait vous aider.\n"
"\n"
"Les plus 'Geek' d'entre vous s'en sortiront\n"
"avec seulement la commande grep, ceci dit.\n"
"\n"
msgstr ""

#: generate-step-E10.sh:60
msgid "ETAPE-E10"
msgstr ""

#: generate-step-D1.sh:9
msgid ""
"Fichier source pour l'etape D1.\n"
"Ce programme doit etre dans un fichier etape_d1.adb\n"
"Corrigez les erreurs, puis\n"
"compilez-le et executez-le pour continuer.\n"
"\n"
"Le fichier est volontairement illisible pour rendre l'exercice plus\n"
"\"amusant\".\n"
msgstr ""

#: generate-step-D1.sh:18
msgid ""
"Bonjour,\n"
"\n"
"Si vous lisez ceci, c'est probablement que vous avez reussi a\n"
"compiler le fichier etape_d1.adb.\n"
msgstr ""

#: generate-step-D1.sh:24
#, sh-format
msgid ""
"L'etape suivante est aussi un programme %s a compiler,\n"
"mais il a ete decoupe en plusieurs morceaux. Le premier est\n"
"dans un fichier OpenDocument (LibreOffice, OpenOffice.org, ...) qui se\n"
"trouve ici :\n"
"\n"
"  $web_url/etape_d2-1%s.odt\n"
"\n"
"Le second est dans un fichier texte qui se trouve dans\n"
"\n"
"  $maindir_tilde/etape_d2-2%s.txt\n"
"\n"
"Et le dernier est ici :\n"
"\\n\\n\n"
msgstr ""

#: generate-step-D1.sh:44
msgid "A vous de faire les copier-coller pour remettre le tout ensemble"
msgstr ""

#: generate-step-D1.sh:51
msgid "procedure Etape_D1 is"
msgstr ""

#: generate-step-D1.sh:78
msgid "end Mauvais_Nom_Qui_Devrait_Etre_Etape_D1;\n"
msgstr ""

#: generate-step-D1.sh:82
msgid "etape_d1.adb genere\n"
msgstr ""

#: generate-step-D1.sh:111
msgid "] /* Ce crochet devrait être une accolade */\n"
msgstr ""

#: generate-step-D1.sh:121
msgid ""
"Fichier source pour l'étape D1.\n"
"Corrigez les erreurs de syntaxe qu'il contient et\n"
"exécutez-le avec la commande python3 pour continuer.\n"
"\n"
"Le fichier est volontairement illisible pour rendre l'exercice plus\n"
"\"amusant\".\n"
msgstr ""

#: generate-step-D1.sh:140
msgid "debut du code"
msgstr ""

#: generate-step-D1.sh:144
msgid "fin du code"
msgstr ""

#: generate-step-B2.sh:25
msgid ""
"Entrez ci-dessous le mot de passe.\n"
"\n"
"Ce mot de passe vous est donné dans le polycopié « Initiation à Unix,\n"
"L'environnement de travail à l'Ensimag », chapitre 4. Si vous n'avez\n"
"pas encore lu le polycopié jusque là, il est temps d'avancer sur la\n"
"lecture de ce document, vous continuerez le jeu de piste après.\n"
msgstr ""

#: generate-step-B2.sh:35
msgid "Mot de passe : "
msgstr ""

#: generate-step-B2.sh:41
#, sh-format
msgid ""
"Très bien.\n"
"\n"
"L'etape suivante se trouve dans le fichier.\n"
"$web_url/etape-C1.tex\n"
"\n"
"Cette fois-ci, c'est un fichier LaTeX. LaTeX est un format de fichier\n"
"qui permet de faire de jolis documents avec une mise en page\n"
"automatique. Vous pouvez compiler ce fichier avec la commande\n"
"\n"
"  pdflatex etape-C1.tex\n"
"\n"
"pour obtenir un fichier PDF, que vous ouvrirez ensuite avec le\n"
"logiciel approprie.\n"
msgstr ""

#: generate-step-E2.sh:7
#, sh-format
msgid ""
"Bien joué !\n"
"\n"
"Les fichiers cachés sont simplement ceux dont le nom commence par un\n"
"point, on peut les manipuler comme les autres, mais \"ls\" ne les\n"
"affiche pas. Par contre, \"ls -a\" les affiche.\n"
"\n"
"Les étapes suivantes se trouvent dans une archive TAR compressée,\n"
"disponible ici :\n"
"\n"
"$web_url/etape-E3.tar.gz\n"
msgstr ""

#: generate-step-B1.sh:10
msgid ""
"Bonjour,\n"
"\n"
"Si vous lisez ceci, c'est que vous avez reussi l'etape B1\n"
"du jeu de piste.\n"
"\n"
"L'étape suivante est un script à exécuter, il s'appelle etape-B2.sh et\n"
"se trouve dans le même répertoire que les fichiers de l'étape B1 que\n"
"vous venez de terminer. Exécutez ce script.\n"
"\n"
msgstr ""

#: generate-step-B1.sh:22
msgid ""
"Fichier source pour l'etape B1.\n"
"Compilez-le et executez-le pour continuer.\n"
"\n"
msgstr ""

#: generate-step-B1.sh:36
msgid ""
"Fichier source pour l'etape B1.\n"
"Ce programme doit etre dans un fichier etape_b1.adb\n"
"Compilez-le et executez-le pour continuer.\n"
"\n"
msgstr ""

#: generate-step-B1.sh:42
msgid "procedure Etape_B1 is"
msgstr ""

#: generate-step-B1.sh:54
msgid ""
"Fichier source pour l'étape B1.\n"
"Ce programme doit être dans un fichier avec l'extension .py.\n"
"Exécutez-le avec la commande python3 pour continuer.\n"
msgstr ""

#: i18n-lib.sh:9
msgid "Generating step using locale:"
msgstr ""

#: mail-lib.sh:3
#, sh-format
msgid ""
"Entrez votre adresse email $school\n"
"Elle s'écrit $example_email\n"
msgstr ""

#: mail-lib.sh:6
msgid ""
"Désolé, je n'ai pas trouvé de commande pour envoyer d'email.\n"
"Voici le contenu du message qui devait être envoyé:\n"
msgstr ""

#: mail-lib.sh:9
msgid ""
"Désolé, l'envoi de mail a échoué.\n"
"Voici le contenu du message qui devait être envoyé:\n"
msgstr ""

#: mail-lib-runtime.sh:4
msgid ""
"Entrez votre mot de passe Ensimag ci-dessous.\n"
"(Si rien ne s'affiche pendant que vous écrivez, c'est normal !)"
msgstr ""

#: mail-lib-runtime.sh:19
msgid "Echec. Entrez à nouveau votre mot de passe Ensimag : "
msgstr ""

#: mail-lib-runtime.sh:23
msgid "Echec de la récupération d'adresse email via LDAP."
msgstr ""

#: generate-all.sh:31
msgid "etape-suivante"
msgstr ""

#: test-i18n.sh:7
msgid "message-id\n"
msgstr ""
